---
name: Helm Integration Tests

'on':
  pull_request:
    paths:
      - 'charts/**'
      - '.github/workflows/test-helm.yaml'
  push:
    branches:
      - master
    paths:
      - 'charts/**'

jobs:
  helm-integration-tests:
    name: Helm Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Set up Kind
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: chart-testing
          wait: 300s

      - name: Determine target branch
        id: get_branch
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            BRANCH="${{ github.ref_name }}"
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            BRANCH="${{ github.base_ref }}"
          else
            BRANCH="master"
          fi
          echo "Target branch: $BRANCH"
          echo "BRANCH=$BRANCH" >> "$GITHUB_OUTPUT"

      - name: Run make generate (includes helm-docs)
        run: |
          # This was mentioned in the original PR commits
          if make help 2>/dev/null | grep -q "generate"; then
            make generate
          else
            echo "No generate target found, continuing..."
          fi

      - name: Run chart-testing (lint)
        env:
          BRANCH: ${{ steps.get_branch.outputs.BRANCH }}
        run: |
          # First run linting only
          ct lint \
            --config .github/ct.yaml \
            --target-branch $BRANCH \
            --debug

      - name: Install JobSet dependency manually
        run: |
          # Since JobSet uses OCI registry, we need to install it manually
          # Use the latest stable version
          JOBSET_VERSION="v0.8.1"
          helm install jobset oci://registry.k8s.io/jobset/charts/jobset \
            --version $JOBSET_VERSION \
            --create-namespace \
            --namespace=jobset-system \
            --wait \
            --timeout=300s

          echo "JobSet installed successfully"
          kubectl get pods -n jobset-system

      - name: Run chart-testing (install)
        env:
          BRANCH: ${{ steps.get_branch.outputs.BRANCH }}
        run: |
          # Now install our charts
          ct install \
            --config .github/ct.yaml \
            --target-branch $BRANCH \
            --debug

      - name: Verify Helm installation
        run: |
          echo "=== Cluster Status ==="
          kubectl get nodes -o wide

          echo "=== Namespaces ==="
          kubectl get namespaces

          echo "=== All Pods ==="
          kubectl get pods --all-namespaces -o wide

          echo "=== Training Operator Pods ==="
          kubectl get pods -n kubeflow-system \
            -l app.kubernetes.io/name=kubeflow-trainer || true

          echo "=== JobSet Pods ==="
          kubectl get pods -n jobset-system || true

          echo "=== Services ==="
          kubectl get svc --all-namespaces

          echo "=== CRDs ==="
          kubectl get crd | grep -E "(training|jobset)" || \
            echo "No training/jobset CRDs found"

      - name: Run basic functionality tests
        run: |
          echo "=== Testing Chart Installation ==="
          # Test the specific installation command from the original PR
          helm upgrade kubeflow-trainer charts/kubeflow-trainer \
            --install \
            --dependency-update \
            --namespace kubeflow-system \
            --create-namespace \
            --wait \
            --timeout 300s \
            --set jobset.install=false \
            --dry-run

          echo "Chart validation successful!"

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up resources..."
          kubectl delete namespace kubeflow-system \
            --ignore-not-found=true || true
          kubectl delete namespace jobset-system \
            --ignore-not-found=true || true
