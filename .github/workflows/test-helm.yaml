---
name: Unit and Integration Test - Helm

on:
  pull_request:

jobs:
  generate:
    name: Generate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Run make generate
        run: |
          if make help 2>/dev/null | grep -q "generate"; then
            make generate
          else
            echo "No generate target found, skipping..."
          fi

      - name: Run make helm-unittest
        run: |
          if make help 2>/dev/null | grep -q "helm-unittest"; then
            make helm-unittest
          else
            echo "No helm-unittest target found, skipping..."
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: generate

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Set up Kind
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: chart-testing
          wait: 300s

      - name: Run chart-testing (lint)
        run: |
          ct lint \
            --config .github/ct.yaml \
            --all \
            --debug

      - name: Install JobSet dependency manually
        run: |
          JOBSET_VERSION="v0.8.1"
          echo "Installing JobSet $JOBSET_VERSION..."
          helm install jobset oci://registry.k8s.io/jobset/charts/jobset \
            --version $JOBSET_VERSION \
            --create-namespace \
            --namespace=jobset-system \
            --wait \
            --timeout=300s

          echo "JobSet installed successfully"
          kubectl get pods -n jobset-system

          # Wait for JobSet to be ready
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=jobset --timeout=300s -n jobset-system

      - name: Create test values file for chart testing
        run: |
          mkdir -p charts/kubeflow-trainer/ci
          cat > charts/kubeflow-trainer/ci/ci-values.yaml << 'EOF'
          # CI-specific values for chart testing
          replicaCount: 1
          image:
            pullPolicy: IfNotPresent
          jobset:
            install: false  # We install JobSet manually
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          # Minimal configuration for testing
          controller:
            replicas: 1
          EOF

      - name: Run chart-testing (install) with better error handling
        run: |
          set -e
          echo "Starting chart installation tests..."

          # Run with more verbose output and longer timeout
          ct install \
            --config .github/ct.yaml \
            --all \
            --debug \
            --helm-extra-args "--timeout=600s --debug" \
            --skip-clean-up || {
              echo "Chart testing failed, checking cluster state..."

              echo "=== Cluster Nodes ==="
              kubectl get nodes -o wide || true

              echo "=== All Namespaces ==="
              kubectl get namespaces || true

              echo "=== All Pods ==="
              kubectl get pods --all-namespaces -o wide || true

              echo "=== Events ==="
              kubectl get events --all-namespaces --sort-by='.lastTimestamp' || true

              echo "=== Helm Releases ==="
              helm list --all-namespaces || true

              # Still exit with error
              exit 1
            }

      - name: Verify Helm installation
        if: success()
        run: |
          echo "=== Cluster Status ==="
          kubectl get nodes -o wide

          echo "=== Namespaces ==="
          kubectl get namespaces

          echo "=== All Pods ==="
          kubectl get pods --all-namespaces -o wide

          echo "=== Training Operator Pods ==="
          kubectl get pods --all-namespaces \
            -l app.kubernetes.io/name=kubeflow-trainer || true

          echo "=== JobSet Pods ==="
          kubectl get pods -n jobset-system || true

          echo "=== Services ==="
          kubectl get svc --all-namespaces

          echo "=== CRDs ==="
          kubectl get crd | grep -E "(training|jobset)" || \
            echo "No training/jobset CRDs found"

          echo "=== Helm Releases ==="
          helm list --all-namespaces

      - name: Run basic functionality tests
        if: success()
        run: |
          echo "=== Testing Chart Installation (Dry Run) ==="
          helm upgrade kubeflow-trainer charts/kubeflow-trainer \
            --install \
            --dependency-update \
            --namespace kubeflow-system \
            --create-namespace \
            --wait \
            --timeout 300s \
            --set jobset.install=false \
            --dry-run

          echo "Chart validation successful!"

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up resources..."

          # Clean up any helm releases first
          helm list --all-namespaces -q | xargs -I {} helm uninstall {} --ignore-not-found || true

          # Clean up namespaces
          kubectl delete namespace kubeflow-system \
            --ignore-not-found=true --timeout=60s || true
          kubectl delete namespace jobset-system \
            --ignore-not-found=true --timeout=60s || true

          # Clean up any remaining test namespaces
          kubectl get namespaces -o name | grep -E "(kubeflow-trainer|test-)" | xargs kubectl delete --timeout=60s || true
